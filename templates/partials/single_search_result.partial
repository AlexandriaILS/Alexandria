{% load format_toast %}

<div class="container mt-3">
    <div class="row">
        <div class="col-xl-8 col-xxl-9">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-5 col-lg-3 col-xl-3">
                            <div class="position-relative" style="height: 250px;">
                                <div class="position-absolute top-50 start-50 translate-middle">
                                    {% if item.image %}
                                        <img src="{{ item.image.url }}" height="250" width="auto"
                                             aria-label="Item cover image"
                                             alt="Item cover image" class="rounded">
                                    {% else %}
                                        <svg class="bd-placeholder-img rounded float-start" width="170" height="250"
                                             xmlns="http://www.w3.org/2000/svg" role="img"
                                             aria-label="Placeholder: 170x250"
                                             preserveAspectRatio="xMidYMid slice" focusable="false"><title>No
                                            image</title>
                                            <rect width="100%" height="100%" fill="#868e96"></rect>
                                            <text x="50%" y="50%" fill="#dee2e6" dy=".3em" style="text-anchor: middle">
                                                No
                                                Image
                                            </text>
                                        </svg>
                                    {% endif %}
                                </div>
                            </div>

                        </div>
                        <div class="col-sm-7 col-lg-9 col-xl-9">
                            <h5 class="card-title">
                                {{ item.title }}{% if item.subtitle %}: {{ item.subtitle }}{% endif %}</h5>
                            <h6 class="card-subtitle mb-2">{{ item.authors }}</h6>
                            <br>{{ item.call_number }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-xxl-3">
            <div class="card shadow-sm" style="height:100%">
                <div class="card-body">
                    <div id="{{ item.id }}HoldButton" class="btn btn-block btn-primary mt-2">Put this on hold!</div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function (event) {

        document.getElementById('{{ item.id }}HoldButton').onclick = function () {
            const url = "/placehold/{{ item.id }}/";

            if (document.getElementById("toast{{ item.id }}")) {
                // The toast is already on screen and active, so don't fire the request again
                return
            }

            const xhr = new XMLHttpRequest();
            xhr.open("GET", url);

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {  // state 4 is "done"
                    let newtoast;
                    if (xhr.status === 200) {
                        newtoast = createToastHTML(
                            "{% format_toast messages.hold_success_message title=item.title subtitle=item.subtitle|default:'' %}", success = true, id ={{ item.id }}
                        )
                    } else {
                        newtoast = createToastHTML("{{ messages.hold_error_message }}", success = false, id ={{ item.id }})
                    }
                    document.getElementById("toaster").insertAdjacentHTML('beforeend', newtoast);

                    let toastEl = document.getElementById("toast{{ item.id }}");
                    let toast = new bootstrap.Toast(toastEl, {'delay': 8000});
                    toast.show();

                    toastEl.addEventListener('hidden.bs.toast', function (event) {
                        toastEl.remove();
                    });
                }
            };
            xhr.send();
        }
    });
</script>
